Ö
java.lang.Object&
<init>()java.lang.Object#<init>()V5
clone()*java.lang.Object#clone()Ljava/lang/Object;J
equals(Ljava/lang/Object;),java.lang.Object#equals(Ljava/lang/Object;)Z*

finalize()java.lang.Object#finalize()V:

getClass(),java.lang.Object#getClass()Ljava/lang/Class;*

hashCode()java.lang.Object#hashCode()I&
notify()java.lang.Object#notify()V,
notifyAll()java.lang.Object#notifyAll()V;

toString()-java.lang.Object#toString()Ljava/lang/String;"
wait()java.lang.Object#wait()V$
wait(J)java.lang.Object#wait(J)V&
wait(JI)java.lang.Object#wait(JI)V.
com.example.UserRepositoryjava.lang.Object„
com.example.Calculatorjava.lang.Object,
<init>() com.example.Calculator#<init>()V*
add(II)com.example.Calculator#add(II)I 
com.example.Userjava.lang.ObjectN
<init>(ILjava/lang/String;Z).com.example.User#<init>(ILjava/lang/String;Z)V*

isActive()com.example.User#isActive()ZÏ
com.example.UserServicejava.lang.Objecte
$<init>(Lcom/example/UserRepository;)=com.example.UserService#<init>(Lcom/example/UserRepository;)V;
isUserActive(I)(com.example.UserService#isUserActive(I)Z